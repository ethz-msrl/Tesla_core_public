cmake_minimum_required(VERSION 3.0)

# @brief Creates a python module from a shared library using SWIG
#
# @param REAL_NAME: the name of the python module
# @param LIBRARY: the target library that this module should link
# @param INCLUDE_DIRS: the include directories that are needed by the wrapped library
# @param I_FILE: the path the the SWIG input .i file
# @param _INCLUDE_I_FILES Additinal SWIG input files that should be imported
# @param ADDITIONAL_FLAGS: Additional flags to pass to SWIG
#

function(create_swig_python_module)
cmake_parse_arguments(
    SWIG_MODULE 
    "${options}"
    "REAL_NAME;LIBRARY;I_FILE"
    "INCLUDE_DIRS;INCLUDE_I_FILES;ADDITIONAL_FLAGS"
    ${ARGN})

set(target ${SWIG_MODULE_REAL_NAME})

find_package(PythonLibs 2.7 REQUIRED)

include_directories( ${PYTHON_INCLUDE_DIRS} )
find_package(SWIG 3.0 REQUIRED COMPONENTS python)
INCLUDE(${SWIG_USE_FILE})

include_directories( ${SWIG_MODULE_INCLUDE_DIRS}) 

set_source_files_properties(${SWIG_MODULE_I_FILE} PROPERTIES CPLUSPLUS ON)
set_property(SOURCE ${SWIG_MODULE_I_FILE} APPEND PROPERTY SWIG_FLAGS ${SWIG_MODULE_ADDITIONAL_FLAGS})

if (PYTHON_VERSION_MAJOR GREATER 2)
    set_property(SOURCE ${SWIG_MODULE_I_FILE} APPEND PROPERTY SWIG_FLAGS "-py3" "-DSWIGPYTHON3")
endif()

foreach(i_file ${SWIG_MODULE_INCLUDE_I_FILES})
set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} -I${i_file})
endforeach()

set_property(SOURCE ${SWIG_MODULE_I_FILE} PROPERTY SWIG_MODULE_NAME ${SWIG_MODULE_REAL_NAME})

set_target_properties(${SWIG_MODULE_${target}_REAL_NAME} PROPERTIES OUTPUT_NAME _${target})

if(APPLE)
    SET(DIST_DIR site-packages)
else()
    SET(DIST_DIR dist-packages)
endif()

set(SWIG_OUT_MODULE_DIR ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_PYTHON_DESTINATION})
set(CMAKE_SWIG_OUTDIR ${SWIG_OUT_MODULE_DIR})

#swig_add_library(${target} TYPE MODULE LANGUAGE python SOURCES ${SWIG_MODULE_I_FILE} OUTPUT_DIR ${SWIG_OUT_MODULE_DIR})
swig_add_module(${target} python ${SWIG_MODULE_I_FILE})
swig_link_libraries(${target} ${SWIG_MODULE_LIBRARY} ${PYTHON_LIBRARIES})

# SWIG by default puts the _module.so in devel/lib but it should go in the dist-utils path
set_target_properties(${SWIG_MODULE_${target}_REAL_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${SWIG_OUT_MODULE_DIR}"
)

# This makes sure that the shared library generated by SWIG is also copied to the install space
install(
    TARGETS ${SWIG_MODULE_${target}_REAL_NAME}
    LIBRARY
    DESTINATION ${CMAKE_INSTALL_PREFIX}/${CATKIN_PACKAGE_PYTHON_DESTINATION}
    )

# and this ensures that the python module generated by SWIG is also copied to the install space
install(FILES ${SWIG_OUT_MODULE_DIR}/${SWIG_MODULE_REAL_NAME}.py DESTINATION ${CMAKE_INSTALL_PREFIX}/${CATKIN_PACKAGE_PYTHON_DESTINATION})

# Clean up
set_source_files_properties(${SWIG_MODULE_I_FILE} PROPERTIES SWIG_FLAGS "")
get_directory_property(AMCF ADDITIONAL_MAKE_CLEAN_FILES)
list(APPEND AMCF ${SWIG_OUT_MODULE_DIR})
set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES "${AMCF}") 

endfunction()
