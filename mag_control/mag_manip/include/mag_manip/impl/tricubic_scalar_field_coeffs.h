/* * Tesla - A ROS-based framework for performing magnetic manipulation
 *
 * Copyright 2018 Multi Scale Robotics Lab
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#include <vector>

namespace mag_manip {
namespace TricubicScalarField {
const int ROWS = 64;
const int COLS = 63;
const int NNZ = 777;

const std::vector<int> ROW_INDICES = {
    8,  9,  10, 11, 12, 13, 14, 15, 0,  1,  2,  3,  4,  5,  6,  7,  12, 13, 14, 15, 4,  5,  6,  7,
    12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 10, 11, 14, 15, 20, 21, 22, 23, 32, 33, 34, 35,
    36, 37, 38, 39, 2,  3,  6,  7,  14, 15, 20, 21, 22, 23, 36, 37, 38, 39, 6,  7,  14, 15, 20, 21,
    22, 23, 36, 37, 38, 39, 0,  1,  2,  3,  4,  5,  6,  7,  18, 19, 22, 23, 4,  5,  6,  7,  10, 11,
    14, 15, 22, 23, 34, 35, 38, 39, 2,  3,  4,  5,  6,  7,  14, 15, 22, 23, 38, 39, 4,  5,  6,  7,
    14, 15, 22, 23, 38, 39, 2,  3,  6,  7,  18, 19, 22, 23, 6,  7,  10, 11, 14, 15, 22, 23, 34, 35,
    38, 39, 2,  3,  6,  7,  14, 15, 22, 23, 38, 39, 6,  7,  14, 15, 22, 23, 38, 39, 24, 25, 26, 27,
    28, 29, 30, 31, 9,  11, 13, 15, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 1,  3,  5,  7,
    13, 15, 28, 29, 30, 31, 44, 45, 46, 47, 5,  7,  13, 15, 28, 29, 30, 31, 44, 45, 46, 47, 17, 19,
    21, 23, 26, 27, 30, 31, 48, 49, 50, 51, 52, 53, 54, 55, 11, 15, 21, 23, 30, 31, 33, 35, 37, 39,
    42, 43, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3,  7,  15, 21, 23, 30, 31, 37,
    39, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63, 7,  15, 21, 23, 30, 31, 37, 39, 46, 47, 52, 53, 54,
    55, 60, 61, 62, 63, 1,  3,  5,  7,  19, 23, 26, 27, 30, 31, 50, 51, 54, 55, 5,  7,  11, 15, 23,
    30, 31, 35, 39, 42, 43, 46, 47, 54, 55, 58, 59, 62, 63, 3,  5,  7,  15, 23, 30, 31, 39, 46, 47,
    54, 55, 62, 63, 5,  7,  15, 23, 30, 31, 39, 46, 47, 54, 55, 62, 63, 3,  7,  19, 23, 26, 27, 30,
    31, 50, 51, 54, 55, 7,  11, 15, 23, 30, 31, 35, 39, 42, 43, 46, 47, 54, 55, 58, 59, 62, 63, 3,
    7,  15, 23, 30, 31, 39, 46, 47, 54, 55, 62, 63, 7,  15, 23, 30, 31, 39, 46, 47, 54, 55, 62, 63,
    0,  1,  2,  3,  4,  5,  6,  7,  25, 27, 29, 31, 4,  5,  6,  7,  9,  11, 13, 15, 29, 31, 41, 43,
    45, 47, 1,  3,  4,  5,  6,  7,  13, 15, 29, 31, 45, 47, 4,  5,  6,  7,  13, 15, 29, 31, 45, 47,
    2,  3,  6,  7,  17, 19, 21, 23, 27, 31, 49, 51, 53, 55, 6,  7,  11, 15, 21, 23, 31, 33, 35, 37,
    39, 43, 47, 53, 55, 57, 59, 61, 63, 3,  6,  7,  15, 21, 23, 31, 37, 39, 47, 53, 55, 61, 63, 6,
    7,  15, 21, 23, 31, 37, 39, 47, 53, 55, 61, 63, 1,  2,  3,  5,  6,  7,  19, 23, 27, 31, 51, 55,
    5,  6,  7,  11, 15, 23, 31, 35, 39, 43, 47, 55, 59, 63, 3,  5,  6,  7,  15, 23, 31, 39, 47, 55,
    63, 5,  6,  7,  15, 23, 31, 39, 47, 55, 63, 2,  3,  6,  7,  19, 23, 27, 31, 51, 55, 6,  7,  11,
    15, 23, 31, 35, 39, 43, 47, 55, 59, 63, 3,  6,  7,  15, 23, 31, 39, 47, 55, 63, 6,  7,  15, 23,
    31, 39, 47, 55, 63, 1,  3,  5,  7,  25, 27, 29, 31, 5,  7,  9,  11, 13, 15, 29, 31, 41, 43, 45,
    47, 1,  3,  5,  7,  13, 15, 29, 31, 45, 47, 5,  7,  13, 15, 29, 31, 45, 47, 3,  7,  17, 19, 21,
    23, 27, 31, 49, 51, 53, 55, 7,  11, 15, 21, 23, 31, 33, 35, 37, 39, 43, 47, 53, 55, 57, 59, 61,
    63, 3,  7,  15, 21, 23, 31, 37, 39, 47, 53, 55, 61, 63, 7,  15, 21, 23, 31, 37, 39, 47, 53, 55,
    61, 63, 1,  3,  5,  7,  19, 23, 27, 31, 51, 55, 5,  7,  11, 15, 23, 31, 35, 39, 43, 47, 55, 59,
    63, 3,  5,  7,  15, 23, 31, 39, 47, 55, 63, 5,  7,  15, 23, 31, 39, 47, 55, 63, 3,  7,  19, 23,
    27, 31, 51, 55, 7,  11, 15, 23, 31, 35, 39, 43, 47, 55, 59, 63, 3,  7,  15, 23, 31, 39, 47, 55,
    63, 7,  15, 23, 31, 39, 47, 55, 63};

const std::vector<int> COL_INDICES = {
    0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,
    2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,
    6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,
    8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15,
    15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17,
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19,
    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21,
    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
    22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24,
    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
    25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27,
    27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29,
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
    31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
    36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38,
    38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
    40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
    41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44,
    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46,
    46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
    48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51,
    51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
    52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
    54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
    59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61,
    61, 62, 62, 62, 62, 62, 62, 62, 62};

const double VALUES[NNZ] = {
    -1, -1,  -1, -1, -1,  -1, -1, -1, 2,  2,  2,   2,  2,   2,   2,  2,  -2, -2, -2, -2, 6,   6,
    6,  6,   -3, -3, -3,  -3, -1, -1, -1, -1, -1,  -1, -1,  -1,  -1, -1, -1, -1, -1, -1, -1,  -1,
    -1, -1,  -1, -1, -1,  -1, -1, -1, 2,  2,  2,   2,  -2,  -2,  -1, -1, -1, -1, -2, -2, -2,  -2,
    6,  6,   -3, -3, -1,  -1, -1, -1, -3, -3, -3,  -3, 2,   2,   2,  2,  2,  2,  2,  2,  -2,  -2,
    -2, -2,  2,  2,  2,   2,  -1, -1, -1, -1, -2,  -2, -2,  -2,  -2, -2, 2,  2,  2,  2,  4,   4,
    -2, -2,  -2, -2, -4,  -4, 2,  2,  8,  8,  -3,  -3, -2,  -2,  -6, -6, 6,  6,  6,  6,  -3,  -3,
    -3, -3,  6,  6,  -1,  -1, -1, -1, -3, -3, -3,  -3, -3,  -3,  2,  2,  8,  8,  -2, -2, -3,  -3,
    -6, -6,  12, 12, -3,  -3, -3, -3, -9, -9, -1,  -1, -1,  -1,  -1, -1, -1, -1, -1, -1, -1,  -1,
    -1, -1,  -1, -1, -1,  -1, -1, -1, -1, -1, -1,  -1, 2,   2,   2,  2,  -2, -2, -1, -1, -1,  -1,
    -2, -2,  -2, -2, 6,   6,  -3, -3, -1, -1, -1,  -1, -3,  -3,  -3, -3, -1, -1, -1, -1, -1,  -1,
    -1, -1,  -1, -1, -1,  -1, -1, -1, -1, -1, -1,  -1, -1,  -1,  -1, -1, -1, -1, -1, -1, -1,  -1,
    -1, -1,  -1, -1, -1,  -1, -1, -1, -1, -1, -1,  -1, -1,  -1,  2,  2,  -2, -1, -1, -1, -1,  -2,
    -2, -2,  -2, -1, -1,  -1, -1, -2, -2, -2, -2,  6,  -3,  -1,  -1, -1, -1, -3, -3, -3, -3,  -1,
    -1, -1,  -1, -3, -3,  -3, -3, 2,  2,  2,  2,   -2, -2,  -1,  -1, -1, -1, -2, -2, -2, -2,  2,
    2,  -1,  -1, -2, -1,  -1, -2, -2, -1, -1, -1,  -1, -2,  -2,  -2, -2, -2, -2, 2,  2,  4,   -2,
    -2, -1,  -1, -4, -2,  -2, -2, -2, -4, -4, 2,   8,  -3,  -2,  -1, -1, -6, -3, -3, -2, -2,  -6,
    -6, 6,   6,  -3, -3,  -1, -1, -1, -1, -3, -3,  -3, -3,  6,   -1, -1, -3, -1, -1, -3, -3,  -1,
    -1, -1,  -1, -3, -3,  -3, -3, -3, -3, 2,  8,   -2, -3,  -1,  -1, -6, -2, -2, -3, -3, -6,  -6,
    12, -3,  -3, -1, -1,  -9, -3, -3, -3, -3, -9,  -9, 2,   2,   2,  2,  2,  2,  2,  2,  -2,  -2,
    -2, -2,  2,  2,  2,   2,  -1, -1, -1, -1, -2,  -2, -2,  -2,  -2, -2, 2,  2,  2,  4,  2,   4,
    -2, -2,  -2, -2, -4,  -4, 2,  8,  2,  8,  -3,  -3, -2,  -2,  -6, -6, 2,  2,  2,  2,  -1,  -1,
    -1, -1,  -2, -2, -2,  -2, -2, -2, 2,  2,  -1,  -1, -1,  -1,  -2, -1, -1, -1, -1, -2, -2,  -2,
    -2, -2,  -2, -2, -2,  2,  2,  4,  -2, -1, -1,  -2, -2,  -2,  -4, -2, -2, -4, -4, 2,  8,   -3,
    -1, -1,  -2, -3, -3,  -6, -2, -2, -6, -6, 2,   2,  4,   2,   2,  4,  -2, -2, -2, -2, -4,  -4,
    2,  2,   4,  -1, -1,  -2, -2, -2, -2, -2, -2,  -4, -4,  -4,  2,  2,  2,  6,  -2, -2, -2,  -4,
    -4, -4,  -8, 2,  2,   10, -3, -2, -2, -6, -6,  -4, -12, 2,   8,  2,  8,  -3, -3, -2, -2,  -6,
    -6, 2,   8,  -1, -1,  -3, -2, -3, -3, -2, -2,  -6, -6,  -6,  2,  2,  10, -2, -3, -2, -6,  -4,
    -6, -12, 2,  14, -3,  -3, -2, -9, -6, -6, -18, 6,  6,   6,   6,  -3, -3, -3, -3, 6,  6,   -1,
    -1, -1,  -1, -3, -3,  -3, -3, -3, -3, 2,  2,   8,  8,   -2,  -2, -3, -3, -6, -6, 12, 12,  -3,
    -3, -3,  -3, -9, -9,  6,  6,  -1, -1, -1, -1,  -3, -3,  -3,  -3, -3, -3, 6,  -1, -1, -1,  -1,
    -3, -1,  -1, -1, -1,  -3, -3, -3, -3, -3, -3,  -3, -3,  2,   8,  -2, -1, -1, -3, -2, -2,  -6,
    -3, -3,  -6, -6, 12,  -3, -1, -1, -3, -3, -3,  -9, -3,  -3,  -9, -9, 2,  8,  2,  8,  -2,  -2,
    -3, -3,  -6, -6, 2,   8,  -1, -1, -2, -3, -2,  -2, -3,  -3,  -6, -6, -6, 2,  2,  10, -2,  -2,
    -3, -4,  -6, -6, -12, 2,  14, -3, -2, -3, -6,  -9, -6,  -18, 12, 12, -3, -3, -3, -3, -9,  -9,
    12, -1,  -1, -3, -3,  -3, -3, -3, -3, -9, -9,  -9, 2,   14,  -2, -3, -3, -6, -6, -9, -18, 18,
    -3, -3,  -3, -9, -9,  -9, -27};
}  // namespace TricubicScalarField
}  // namespace mag_manip
